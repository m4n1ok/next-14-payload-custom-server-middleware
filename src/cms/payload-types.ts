/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ICmsLinkGroup".
 */
export type ICmsLinkGroup =
  | {
      link: ICmsLink;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ToolFeatureItems".
 */
export type ToolFeatureItems =
  | {
      tool?: (string | null) | Tool;
      id?: string | null;
    }[]
  | null;

export interface Config {
  collections: {
    articles: Article;
    categories: Category;
    personas: Persona;
    'use-cases': UseCase;
    tools: Tool;
    pages: Page;
    customers: Customer;
    'customer-quotes': CustomerQuote;
    'community-assets': CommunityAsset;
    promos: Promo;
    pricing: Pricing;
    faqs: Faq;
    media: Media;
    users: User;
    redirects: Redirect;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: string;
  title: string;
  pageTitle?: string | null;
  shortDescription?: string | null;
  cover?: string | Media | null;
  blocks?: (TextBlock | AssetBlock | ToolBlock)[] | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  slug?: string | null;
  editSlug?: boolean | null;
  categories?: (string | Category)[] | null;
  author?: string | null;
  publishedAt: string;
  importedFromGhost?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextBlock".
 */
export interface TextBlock {
  text?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  text_html?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'text';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AssetBlock".
 */
export interface AssetBlock {
  assetType?: ('image' | 'video' | 'audio' | 'code') | null;
  image?:
    | {
        [k: string]: unknown;
      }
    | Media
    | null;
  audio?:
    | {
        [k: string]: unknown;
      }
    | Media
    | null;
  video?:
    | {
        [k: string]: unknown;
      }
    | Media
    | null;
  code?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'asset';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ToolBlock".
 */
export interface ToolBlock {
  tool?:
    | ({
        [k: string]: unknown;
      } | null)
    | Tool;
  id?: string | null;
  blockName?: string | null;
  blockType: 'tool';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tools".
 */
export interface Tool {
  id: string;
  title: string;
  pageTitle?: string | null;
  shortDescription?: string | null;
  color?: ('blue' | 'cyan' | 'green' | 'magenta' | 'neutral' | 'orange' | 'purple' | 'red' | 'teal' | 'yellow') | null;
  heroAsset?: {
    assetType?: ('image' | 'video' | 'code') | null;
    image?: string | Media | null;
    audio?: string | Media | null;
    video?: string | Media | null;
    code?: string | null;
  };
  cover?: {
    assetType?: 'image' | null;
    image?: string | Media | null;
    audio?: string | Media | null;
    video?: string | Media | null;
    code?: string | null;
  };
  links?: ICmsLinkGroup;
  blocks?: (AssetSliderBlock | ToolFeaturesBlock | PricingBlock | ToolsBlock | SectionBlock)[] | null;
  recirculationBlocks?: (ArticlesBlock | SolutionsBlock)[] | null;
  faq?: {
    title?: string | null;
    faqs?: (string | Faq)[] | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  slug?: string | null;
  editSlug?: boolean | null;
  parent?: (string | null) | Tool;
  breadcrumbs?:
    | {
        doc?: (string | null) | Tool;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ICmsLink".
 */
export interface ICmsLink {
  type?: ('reference' | 'custom') | null;
  newTab?: boolean | null;
  reference?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'articles';
        value: string | Article;
      } | null)
    | ({
        relationTo: 'use-cases';
        value: string | UseCase;
      } | null)
    | ({
        relationTo: 'tools';
        value: string | Tool;
      } | null)
    | ({
        relationTo: 'personas';
        value: string | Persona;
      } | null);
  url?: string | null;
  label: string;
  appearance?: ('primary' | 'secondary') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  pageTitle?: string | null;
  shortDescription?: string | null;
  cover?: string | Media | null;
  video?: string | Media | null;
  links?: ICmsLinkGroup;
  blocks?: {
    developers?: SectionBlock[] | null;
    generic?: TextBlock[] | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  slug?: string | null;
  editSlug?: boolean | null;
  template?: ('generic' | 'developers') | null;
  parent?: (string | null) | Page;
  breadcrumbs?:
    | {
        doc?: (string | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectionBlock".
 */
export interface SectionBlock {
  anchorLabel?: string | null;
  backgroundColor?: ('white' | 'gray' | 'black') | null;
  blocks?:
    | (
        | CustomersBlock
        | ArticlesBlock
        | SolutionsBlock
        | PromoBlock
        | CustomerQuotesBlock
        | ToolFeaturesBlock
        | AssetSliderBlock
        | PricingBlock
        | FaqsBlock
        | FeaturesHighlightBlock
      )[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'section';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CustomersBlock".
 */
export interface CustomersBlock {
  title?: string | null;
  customers?: (string | Customer)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'customers';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: string;
  name: string;
  image?: string | Media | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArticlesBlock".
 */
export interface ArticlesBlock {
  layout?: ('free-form-trio' | 'list') | null;
  title?: string | null;
  articles?: (string | Article)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'articles';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SolutionsBlock".
 */
export interface SolutionsBlock {
  title?: string | null;
  solutions?:
    | (
        | {
            relationTo: 'use-cases';
            value: string | UseCase;
          }
        | {
            relationTo: 'personas';
            value: string | Persona;
          }
      )[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'solutions';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "use-cases".
 */
export interface UseCase {
  id: string;
  title: string;
  pageTitle?: string | null;
  shortDescription?: string | null;
  color?: ('blue' | 'cyan' | 'green' | 'magenta' | 'neutral' | 'orange' | 'purple' | 'red' | 'teal' | 'yellow') | null;
  cover?: string | Media | null;
  links?: ICmsLinkGroup;
  heroBlocks?: CustomersBlock[] | null;
  blocks?:
    | (
        | CustomersBlock
        | ArticlesBlock
        | SolutionsBlock
        | PromoBlock
        | CustomerQuotesBlock
        | ToolFeaturesBlock
        | AssetSliderBlock
        | FeaturesHighlightBlock
        | PricingBlock
        | FaqsBlock
        | SectionBlock
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  slug?: string | null;
  editSlug?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PromoBlock".
 */
export interface PromoBlock {
  promo?: (string | null) | Promo;
  id?: string | null;
  blockName?: string | null;
  blockType: 'promo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "promos".
 */
export interface Promo {
  id: string;
  title: string;
  color?: ('blue' | 'cyan' | 'green' | 'magenta' | 'neutral' | 'orange' | 'purple' | 'red' | 'teal' | 'yellow') | null;
  description?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description_html?: string | null;
  image?: string | Media | null;
  links?: ICmsLinkGroup;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CustomerQuotesBlock".
 */
export interface CustomerQuotesBlock {
  title?: string | null;
  customerQuotes?: (string | CustomerQuote)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'customer-quotes';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer-quotes".
 */
export interface CustomerQuote {
  id: string;
  quote: string;
  author: string;
  username?: string | null;
  url?: string | null;
  avatar?: string | Media | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ToolFeaturesBlock".
 */
export interface ToolFeaturesBlock {
  title?: string | null;
  toolFeatureItems?: ToolFeatureItems;
  id?: string | null;
  blockName?: string | null;
  blockType: 'tool-features';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AssetSliderBlock".
 */
export interface AssetSliderBlock {
  title?: string | null;
  assetSliderItem?:
    | (
        | {
            relationTo: 'articles';
            value: string | Article;
          }
        | {
            relationTo: 'community-assets';
            value: string | CommunityAsset;
          }
      )[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'asset-slider';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "community-assets".
 */
export interface CommunityAsset {
  id: string;
  customer?: (string | null) | Customer;
  label: string;
  assetType?: ('image' | 'video' | 'audio') | null;
  image?: string | Media | null;
  audio?: string | Media | null;
  video?: string | Media | null;
  code?: string | null;
  url?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesHighlightBlock".
 */
export interface FeaturesHighlightBlock {
  component?: string | null;
  title?: string | null;
  featureItem?:
    | {
        title: string;
        description?: string | null;
        assetType?: 'image' | null;
        image?: string | Media | null;
        audio?: string | Media | null;
        video?: string | Media | null;
        code?: string | null;
        links?: ICmsLinkGroup;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'features-highlight';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingBlock".
 */
export interface PricingBlock {
  title?: string | null;
  pricing?: (string | Pricing)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'pricing';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricing".
 */
export interface Pricing {
  id: string;
  name: string;
  label?: string | null;
  price?: number | null;
  discountedPrice?: number | null;
  currency?: string | null;
  priceLabel?: string | null;
  description?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description_html?: string | null;
  link: ICmsLink;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FaqsBlock".
 */
export interface FaqsBlock {
  title?: string | null;
  faqs?: (string | Faq)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface Faq {
  id: string;
  question: string;
  answer?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  answer_html?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "personas".
 */
export interface Persona {
  id: string;
  title: string;
  pageTitle?: string | null;
  shortDescription?: string | null;
  color?: ('blue' | 'cyan' | 'green' | 'magenta' | 'neutral' | 'orange' | 'purple' | 'red' | 'teal' | 'yellow') | null;
  featured_article?: (string | null) | Article;
  cover?: string | Media | null;
  heroBlocks?: (CustomersBlock | ArticlesBlock | SolutionsBlock)[] | null;
  blocks?: (CustomersBlock | PromoBlock | CustomerQuotesBlock | ToolFeaturesBlock | FeaturesHighlightBlock)[] | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  slug?: string | null;
  editSlug?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ToolsBlock".
 */
export interface ToolsBlock {
  tools?: (string | Tool)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'tools';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  slug?: string | null;
  editSlug?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role?: ('viewer' | 'editor' | 'manager' | 'admin') | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'articles';
          value: string | Article;
        } | null)
      | ({
          relationTo: 'tools';
          value: string | Tool;
        } | null)
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'personas';
          value: string | Persona;
        } | null)
      | ({
          relationTo: 'use-cases';
          value: string | UseCase;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonBlock".
 */
export interface ButtonBlock {
  links?: ICmsLinkGroup;
  id?: string | null;
  blockName?: string | null;
  blockType: 'button';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ExternalImageBlock".
 */
export interface ExternalImageBlock {
  url?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'external-image';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqsRepeaterBlock".
 */
export interface FaqsRepeaterBlock {
  question?:
    | {
        question: string;
        answer: string;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqs-repeater';
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}